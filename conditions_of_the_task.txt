 21. Создать внешний репозиторий c названием XML.
 	Открываем Github.com
        Нажимаем на Repositiry
        Нажимаем new repository
        Задаем имя Repository name XML
        Устанавливаем флаг Add a README file
        Нажимаем Create repository
 22. Клонировать репозиторий XML на локальный компьютер.
 	Tap Code
        Copy HTTP link
        В терминале Git зайти в необходимый репозиторий и ввести команду 
	clone [HTTP link]

 23. Внутри локального XML создать файл “new.xml”.
 	В терминале Git зайти в репозиторий XML командой cd XML
        touch new.xml

 24. Добавить файл под гит.
 	В терминале Git ввести команду
        git add . (или указать конкретный файл)

 25. Закоммитить файл.
	В терминале Git ввести команду
        git commit -m "newfilexml"
 
 26. Отправить файл на внешний GitHub репозиторий.
 	В терминале Git ввести команду
        git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	В терминале Git ввести команду
        nano new.xml
        Вводим информацию в формате xml
        ctrl+O ctrl+x
 
 28. Отправить изменения на внешний репозиторий.
 	В терминале Git ввести команду
        git commit -a -m "newxmlchange"
        git push

 29. Создать файл preferences.xml
	В терминале Git ввести команду
        touch preferences.xml
 
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 	В терминале Git ввести команду
        nano preferences.xml
        Вводим информацию в формате xml
        ctrl+O ctrl+x

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 	В терминале Git ввести команду
        touch skils.xml
        nano skils.xml
        Вводим информацию в формате xml
        ctrl+O ctrl+x

 32. Сделать коммит в одну строку.
 	В терминале Git ввести команду
        git commit -a -m "twofileschenges"

 33. Отправить сразу 2 файла на внешний репозиторий.
 	git push

 34. На веб интерфейсе создать файл bug_report.xml.
	Находясь внутри репозитория, нажать Add file
        Далее Create new file
        Ввести имя с расширением
        Нажать Commit changes
 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 	Нажать Commit changes

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	Выбираем нужный файл.
        Нажимаем Edit this file
        Добавляем баг репорт в формате xml
 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 	Нажимаем Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
	В терминале Git ввести команду
        git pull

